---
title: "Analysis 1 - BAIT Questionnaire"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: false
execute: 
  cache: false
---


```{r}
#| message: false
#| warning: false

library(tidyverse)
library(easystats)
library(patchwork)
library(ggside)
library(ggdist)
```


## Data Preparation


```{r}
df1 <- read.csv("https://raw.githubusercontent.com/RealityBending/FakeFace/refs/heads/main/data/data.csv") |> 
  select(Participant, Age, Sex, Date, starts_with("AI_")) |> 
  rename(
    # I think current Artificial Intelligence algorithms can generate very realistic images
    BAIT_ImagesRealistic = AI_1_RealisticImages,
    # Organisations use Artificial Intelligence unethically
    BAIT_Unethical = AI_2_Unethical,
    # I think videos generated by Artificial Intelligence are impossible to distinguish from real videos
    BAIT_VideosReal = AI_3_VideosReal,
    # I am interested in using artificially intelligent systems in my daily life
    BAIT_DailyLife = AI_4_DailyLife,
    # I think Computer-Generated Imagery (CGI) software is capable of perfectly imitating reality
    BAIT_ImitatingReality = AI_5_ImitatingReality,
    # I think Artificial Intelligence is dangerous
    BAIT_Dangerous = AI_6_Dangerous,
    # I think current Artificial Intelligence algorithms can generate very realistic videos
    BAIT_VideosRealistic = AI_7_RealisticVideos,
    # Artificial Intelligence is exciting
    BAIT_Exciting = AI_8_Exciting,
    # There are many beneficial applications of Artificial Intelligence
    BAIT_Applications = AI_9_Applications,
    # Images of faces or people generated by Artificial Intelligence will contain errors
    BAIT_FaceErrors = AI_10_FaceErrors
    )
df1 <- df1[!duplicated(df1), ]
row.names(df1) <- NULL
```


```{r}
df2 <- read.csv("https://raw.githubusercontent.com/RealityBending/FakeFace2/refs/heads/main/data/data_participants.csv") |> 
  select(Participant, Age, Sex=Gender, Date, starts_with("BAIT_"), -ends_with("Duration")) |> 
  rename(
    # Current AI algorithms can generate very realistic images
    BAIT_ImagesRealistic = BAIT_1_ImagesRealistic,
    # Images of faces or people generated by AI always contain errors and artifacts
    BAIT_ImagesIssues = BAIT_2_ImagesIssues,
    # Videos generated by AI have obvious problems that make them easy to spot as fake
    BAIT_VideosIssues = BAIT_3_VideosRealistic,  # NOTE: WRONG LABEL IN DATA
    # Current AI algorithms can generate very realistic videos
    BAIT_VideosRealistic = BAIT_4_VideosIssues,
    # Computer-Generated Images (CGI) are capable of perfectly imitating reality
    BAIT_ImitatingReality = BAIT_5_ImitatingReality,
    # Technology allows the creation of environments that seem just as real as reality
    BAIT_EnvironmentReal = BAIT_6_EnvironmentReal,
    # AI assistants can write texts that are indistinguishable from those written by humans
    BAIT_TextRealistic = BAIT_7_TextRealistic,
    # Documents and paragraphs written by AI usually read differently compared to Human productions
    BAIT_TextIssues = BAIT_8_TextIssues,
    # AI is dangerous
    BAIT_Dangerous = BAIT_9_NegativeAttitutes,
    # I am worried about future uses of AI
    BAIT_Worry = BAIT_10_NegativeAttitutes,
    # AI is exciting
    BAIT_Exciting = BAIT_11_PositiveAttitutes,
    # Much of society will benefit from a future full of AI
    BAIT_Benefit = BAIT_12_PositiveAttitutes,
    # How knowledgeable do you consider yourself about Artificial Intelligence (AI) technology?
    BAIT_Expertise = BAIT_AI_Knowledge
    )
```


```{r}
df3 <- read.csv("https://raw.githubusercontent.com/RealityBending/FictionEro/refs/heads/main/study1/data/data_participants.csv") |> 
  select(Participant, Age, Sex, Date, starts_with("BAIT_"), starts_with("GAAIS_"), -ends_with("Duration"),
         -BAIT_Text, -BAIT_Visual, -BAIT_Videos) |> 
  rename(
    # Artificial Intelligence might take control of people
    BAIT_Control = GAAIS_Negative_9,
    # Artificial Intelligence is dangerous
    BAIT_Dangerous = GAAIS_Negative_10,
    # I am worried about future uses of Artificial Intelligence
    BAIT_Worry = GAAIS_Negative_15,
    # I am interested in using artificially intelligent systems in my daily life
    BAIT_DailyLife = GAAIS_Positive_7,
    # Artificial Intelligence is exciting
    BAIT_Exciting = GAAIS_Positive_12,
    # Much of society will benefit from a future full of Artificial Intelligence
    BAIT_Benefit = GAAIS_Positive_17,
    # Current Artificial Intelligence algorithms can generate very realistic images
    BAIT_ImagesRealistic = BAIT_1_ImagesRealistic,
    # Images of faces or people generated by Artificial Intelligence always contain errors and artifacts
    BAIT_ImagesIssues = BAIT_2_ImagesIssues,
    # Videos generated by Artificial Intelligence have obvious problems that make them easy to spot as fake
    BAIT_VideosIssues = BAIT_3_VideosRealistic, # NOTE: WRONG LABEL IN DATA
    # Current Artificial Intelligence algorithms can generate very realistic videos
    BAIT_VideosRealistic = BAIT_4_VideosIssues,
    # Computer-Generated Images (CGI) are capable of perfectly imitating reality
    BAIT_ImitatingReality = BAIT_5_ImitatingReality,
    # Technology allows the creation of environments that seem just as real as reality
    BAIT_EnvironmentReal = BAIT_6_EnvironmentReal, 
    # Artificial Intelligence assistants can write texts that are indistinguishable from those written by humans
    BAIT_TextRealistic = BAIT_7_TextRealistic,
    # Documents and paragraphs written by Artificial Intelligence usually read differently compared to Human productions
    BAIT_TextIssues = BAIT_8_TextIssues
    )
```


## EGA

::: {.panel-tabset}

### Sample 1

```{r}
# EGAnet::itemDiagnostics(select(df1, starts_with("BAIT")), seed = 1)
```

```{r}
uva <- EGAnet::UVA(data = select(df1, starts_with("BAIT")), cut.off = 0.4)
uva
uva$keep_remove
```

```{r}
ega1 <- EGAnet::bootEGA(
  data = select(df1, starts_with("BAIT")),
  seed=123,
  model="glasso",
  algorithm="leiden",
  EGA.type="riEGA",
  type="resampling",
  plot.typicalStructure=FALSE,
  verbose=FALSE)

plot(ega1$EGA)

make_table <- function(ega) {
  EGAnet::net.loads(ega$EGA)$std |> 
  as.data.frame() |> 
  rownames_as_column("Item") |> 
  gt::gt() |> 
  gt::data_color(
    method = "numeric",
    palette = c("red", "white", "green"),
    domain = c(-1, 1)
  ) |> 
  gt::fmt_number(decimals = 2)
}
make_table(ega1)
```

```{r}
features1 <- data.frame(
  Participant = df1$Participant,
  Sample = "Sample 1"
)
features1$BAIT_Realism <- rowMeans(df1[c("BAIT_VideosRealistic", "BAIT_ImagesRealistic", "BAIT_ImitatingReality")])
features1$BAIT_Positive <- df1 |> 
  datawizard::reverse_scale(select = c("BAIT_Dangerous")) |> 
  datawizard::data_select(select = c("BAIT_Exciting", "BAIT_DailyLife", "BAIT_Applications", "BAIT_Dangerous")) |> 
  rowMeans()
```




### Sample 3

```{r}
uva <- EGAnet::UVA(data = select(df3, starts_with("BAIT")), cut.off = 0.4)
uva
uva$keep_remove
```

```{r}
ega3 <- EGAnet::bootEGA(
  data = select(df3, starts_with("BAIT")),
  seed=123,
  model="glasso",
  algorithm="leiden",
  EGA.type="riEGA",
  type="resampling",
  plot.typicalStructure=FALSE,
  verbose=FALSE)

plot(ega3$EGA)

make_table(ega3)
```


```{r}
features3 <- data.frame(
  Participant = df3$Participant,
  Sample = "Sample 3"
)

features3$BAIT_Realism <- df3 |> 
  datawizard::reverse_scale(select = c("BAIT_ImagesIssues", "BAIT_VideosIssues")) |> 
  datawizard::data_select(select = c("BAIT_VideosRealistic", "BAIT_ImitatingReality", "BAIT_ImagesRealistic", "BAIT_EnvironmentReal", "BAIT_ImagesIssues", "BAIT_VideosIssues")) |> 
  rowMeans()
  
features3$BAIT_Positive <- df3 |> 
  datawizard::reverse_scale(select = c("BAIT_Worry", "BAIT_Dangerous", "BAIT_Control")) |> 
  datawizard::data_select(select = c("BAIT_DailyLife", "BAIT_Benefit", "BAIT_Exciting", "BAIT_Control", "BAIT_Worry", "BAIT_Dangerous")) |> 
  rowMeans()

features3$BAIT_TextRealism <- df3 |> 
  datawizard::reverse_scale(select = c("BAIT_TextIssues")) |> 
  datawizard::data_select(select = c("BAIT_TextRealistic", "BAIT_TextIssues")) |> 
  rowMeans()
```



### Sample 2

```{r}
uva <- EGAnet::UVA(data = select(df2, starts_with("BAIT")), cut.off = 0.4)
uva
uva$keep_remove
```

```{r}
ega2 <- EGAnet::bootEGA(
  data = select(df2, starts_with("BAIT"), -BAIT_Expertise),
  seed=123,
  model="glasso",
  algorithm="leiden",
  EGA.type="riEGA",
  type="resampling",
  plot.typicalStructure=FALSE,
  verbose=FALSE)

plot(ega2$EGA)

make_table(ega2)
```

```{r}
features2 <- data.frame(
  Participant = df2$Participant,
  Sample = "Sample 2"
)

features2$BAIT_Realism <- df2 |> 
  datawizard::reverse_scale(select = c("BAIT_ImagesIssues", "BAIT_VideosIssues")) |> 
  datawizard::data_select(select = c("BAIT_VideosRealistic", "BAIT_ImagesRealistic", "BAIT_ImitatingReality", "BAIT_VideosIssues")) |> 
  rowMeans() / 6
  
features2$BAIT_Positive <- df2 |> 
  datawizard::reverse_scale(select = c("BAIT_Worry", "BAIT_Dangerous")) |> 
  datawizard::data_select(select = c("BAIT_Benefit", "BAIT_Exciting", "BAIT_Worry", "BAIT_Dangerous")) |> 
  rowMeans() / 6

features2$BAIT_Simulate <- df2 |> 
  datawizard::reverse_scale(select = c("BAIT_TextIssues")) |> 
  datawizard::data_select(select = c("BAIT_ImitatingReality", "BAIT_TextRealistic", "BAIT_EnvironmentReal", "BAIT_TextIssues")) |> 
  rowMeans() / 6
```


:::

## Demographics

### Date

```{r}
dat <- rbind(
  df1 |> 
    select(Participant, Date, starts_with("BAIT")) |> 
    full_join(features1, by = "Participant") |>
    tidyr::pivot_longer(starts_with("BAIT")) |>
    mutate(Sample = "Sample 1"),
  df3 |> 
    select(Participant, Date, starts_with("BAIT")) |> 
    full_join(features3, by = "Participant") |>
    tidyr::pivot_longer(starts_with("BAIT")) |>
    mutate(Sample = "Sample 3", value = value),
  df2 |> 
    select(Participant, Date, starts_with("BAIT")) |> 
    full_join(features2, by = "Participant") |>
    tidyr::pivot_longer(starts_with("BAIT")) |>
    mutate(Sample = "Sample 2", value = value / 6)
) |> 
  # summarize(
  #   value = median(value, na.rm = TRUE),
  #   .by = c("Date", "Sample", "name")
  # ) |> 
  filter(name %in% c("BAIT_Realism", "BAIT_Positive", "BAIT_Simulate")) 

dat |> 
  mutate(Date = lubridate::dmy(Date)) |> 
  ggplot(aes(x = Date, y = value, color = name, group = interaction(Sample, name))) +
  geom_point() +
  geom_smooth(method="lm", se = FALSE)
```

### Gender

```{r}
dat <- rbind(
  full_join(df1, features1, by = "Participant") |> 
  select(Sex, Age, Sample, BAIT_Realism, BAIT_Positive) |> 
    mutate(BAIT_Simulate = NA, BAIT_TextRealism = NA),
  full_join(df2, features2, by = "Participant") |> 
  select(Sex, Age, Sample, BAIT_Realism, BAIT_Positive, BAIT_Simulate) |> 
    mutate(BAIT_TextRealism = NA),
  full_join(df3, features3, by = "Participant") |> 
  select(Sex, Age, Sample, BAIT_Realism, BAIT_Positive, BAIT_TextRealism) |> 
    mutate(BAIT_Simulate = NA)) |> 
  mutate(Sample = as.factor(Sample))

m1 <- lm(BAIT_Realism ~ Sample / Sex, data = filter(dat, Sex %in% c("Male", "Female")))
m2 <- lm(BAIT_Positive ~ Sample / Sex, data = filter(dat, Sex %in% c("Male", "Female")))

rbind(
  mutate(estimate_relation(m1), Outcome = "Realism"),
  mutate(estimate_relation(m2), Outcome = "Positive")
) |> 
  ggplot(aes(x = Sample, y = Predicted, color = Sex, group = Sex)) +
  geom_pointrange(aes(ymin = CI_low, ymax = CI_high), position = position_dodge(width = 0.1))  +
  facet_wrap(~Outcome)

estimate_contrasts(m1, contrast = "Sex", by = "Sample")
estimate_contrasts(m2, contrast = "Sex", by = "Sample")
```


### Age

```{r}
library(mgcv)

m1 <- gam(BAIT_Realism ~ s(Age, by = Sample, k=5), data = filter(dat, Sex %in% c("Male", "Female")))
m2 <- gam(BAIT_Positive ~ s(Age, by = Sample, k=5), data = filter(dat, Sex %in% c("Male", "Female")))

rbind(
  mutate(estimate_relation(m1, length = 100), Outcome = "Realism"),
  mutate(estimate_relation(m2, length = 100), Outcome = "Positive")
) |> 
  ggplot(aes(x = Age, y = Predicted)) +
  geom_ribbon(aes(ymin = CI_low, ymax = CI_high, fill = Sample), alpha = 0.2) +
  geom_line(aes(color = Sample)) +
  facet_wrap(~Outcome)
```


## Save


```{r}
features <- rbind(features1)

# write.csv(features, "../data/features_ega.csv", row.names = FALSE)
```
